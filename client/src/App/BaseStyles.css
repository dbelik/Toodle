@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
    /* Define variables */
    :root {
        --primary: theme("colors.primary");
        --primary-content: theme("colors.primaryContent");
        --primary-interact: theme("colors.primaryInteract");

        --fast: 0.1s;
    }

    /* Reset tags */
    :root { font-size: 16px; }
    * { box-sizing: border-box; }

    body, a { color: theme("colors.text"); }
    a:hover, a:focus { color: theme("colors.primary"); }
    h1 { font-size: theme("sizes.headers.h1"); margin-bottom: theme("spacings.margins.h1"); }
    h2 { font-size: theme("sizes.headers.h2"); margin-bottom: theme("spacings.margins.h2"); }
    h3 { font-size: theme("sizes.headers.h3"); margin-bottom: theme("spacings.margins.h3"); }
    button, button:hover, button:focus { border: none; outline: none; }
    input { margin-bottom: theme("spacings.margins.input"); }

    /* Add utility classes */
    .color-default-text { color: theme("colors.text"); }
    .color-error { color: theme("colors.error"); }

    .color-primary { color: theme("colors.primary"); }
    .color-primary-content { color: theme("colors.primaryContent"); }
    
    .bg-primary { background-color: theme("colors.primary"); }
    .bg-primary-interact { background-color: theme("colors.primaryInteract"); }

    .border-color-primary { border-color: theme("colors.borderPrimary"); }

    .content-container { 
        width: min(theme("sizes.container"), 100%);
        margin: 0px auto;
    }

    .-translate-x-half { transform: translateX(-50%); }

    .top-6-over-5 { top: 120%; }

    .mh-full { min-height: 100%; }
}